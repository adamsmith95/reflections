When would you want to use a remote repository rather than keeping all your work
local?
If you are having other users adding to your repository - or using different computers (home and/or work)

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?
    To not have too many updates and only pull when you want to update your local repo.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?
    Forks are githubs version of clones - but can only be found in/on your github account... Clones are when you essentially copy someones github repo to your local machine and branches can then be used to make different versions of the repo's you have downloaded, without losing the original version(s).

What is the benefit of having a copy of the last known state of the remote
stored locally?
    If your computer crashes or you lose data - or if you delete or modify local branches commits with unfixable mistakes - clear and clone/start over.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?
    Google docs/drive? Dropbox? FTP? Would be more difficult, you may need to name a number of files (as you would have no version control) - haven't checked if there are any other versions of git to answer this question.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?
    When you want to create a different feature or experimental branch to try/test out  a new features that might not ever be introduced - or a different langauge of your site.


Github commands

 git clone https://github.com/adamsmith95/recipes.git 	|	clones the recipes repository to my local
 git remote -v	| means verbose - so gives more information on the remote created

Updated commands from Code Academy:
git checkout HEAD filename: Discards changes in the working directory.
git reset HEAD filename: Unstages file changes in the staging area.
git reset SHA: Can be used to reset to a previous commit in your commit history.